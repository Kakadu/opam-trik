SDKTARGETSYSROOT=%{prefix}%/trik-sdk-linux/sysroots/armv5te-oe-linux-gnueabi
PKG_CONFIG_SYSROOT_DIR=$(SDKTARGETSYSROOT)
OECORE_NATIVE_SYSROOT=%{prefix}%/trik-sdk-linux/sysroots/i686-oesdk-linux
OECORE_TARGET_SYSROOT="$(SDKTARGETSYSROOT)"

ANDROID_LEVEL?=21
ANDROID_SUBARCH?=armv5te
ANDROID_ABI?=linux_eabihf
PREFIX=%{prefix}%/arm-oe-linux-gnueabi
BINDIR=$(PREFIX)/bin
LIBDIR=$(PREFIX)/lib/ocaml
STUBLIBDIR=$(LIBDIR)/stublibs
MANDIR=$(PREFIX)/man
MANEXT=1
CAMLRUN=%{bin}%/ocamlrun
CAMLYACC=%{bin}%/ocamlyacc
RANLIB=$(OECORE_NATIVE_SYSROOT)/usr/bin/arm-oe-linux-gnueabi/arm-oe-linux-gnueabi-ranlib
#RANLIBCMD=%{lib}%/android-ndk/toolchains/ANDROID_TOOLCHAIN/prebuilt/%{os}%-x86/bin/arm-linux-androideabi-ranlib
RANLIBCMD=$(RANLIB)
#ARCMD=%{lib}%/android-ndk/toolchains/ANDROID_TOOLCHAIN/prebuilt/%{os}%-x86/bin/arm-linux-androideabi-ar
ARCMD=$(OECORE_NATIVE_SYSROOT)/usr/bin/arm-oe-linux-gnueabi/arm-oe-linux-gnueabi-ar
SHARPBANGSCRIPTS=true
UNIX_OR_WIN32=unix
UNIXLIB=unix
GRAPHLIB=graph
BNG_ARCH=generic
BNG_ASM_LEVEL=0
PTHREAD_LINK=
PTHREAD_CAML_LINK=
X11_INCLUDES=not found
X11_LINK=not found
TK_DEFS=
TK_LINK=
LIBBFD_LINK=
#BYTECC=%{lib}%/android-ndk/toolchains/ANDROID_TOOLCHAIN/prebuilt/%{os}%-x86/bin/arm-linux-androideabi-gcc --sysroot %{lib}%/android-ndk/platforms/android-$(ANDROID_LEVEL)/arch-arm -I $(PREFIX)/include -L $(PREFIX)/lib -O2
BYTECC=$(OECORE_NATIVE_SYSROOT)/usr/bin/arm-oe-linux-gnueabi/arm-oe-linux-gnueabi-gcc -march=armv5te -marm -mthumb-interwork --sysroot=$(SDKTARGETSYSROOT)
BYTECCCOMPOPTS=-fno-defer-pop -Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
BYTECCLINKOPTS= -Wl,-E
BYTECCLIBS= -lm  -ldl
BYTECCRPATH=-Wl,-rpath,
EXE=
SUPPORTS_SHARED_LIBRARIES=true
SHAREDCCCOMPOPTS=-fPIC
MKSHAREDLIBRPATH=-Wl,-rpath,
NATDYNLINKOPTS=-Wl,-E
SYSLIB=-l$(1)
#ml let syslib x = "-l"^x;;

### How to build a static library
MKLIB=$(OECORE_NATIVE_SYSROOT)/usr/bin/arm-oe-linux-gnueabi/arm-oe-linux-gnueabi-ar rc $(1) $(2); $(OECORE_NATIVE_SYSROOT)/usr/bin/arm-oe-linux-gnueabi/arm-oe-linux-gnueabi-ranlib $(1)
#ml let mklib out files opts = Printf.sprintf "%{prefix}%/trik-sdk-linux/sysroots/i686-oesdk-linux/usr/bin/arm-oe-linux-gnueabi/arm-oe-linux-gnueabi-ar rc %s %s %s; %{prefix}%/trik-sdk-linux/sysroots/i686-oesdk-linux/usr/bin/arm-oe-linux-gnueabi/arm-oe-linux-gnueabi-ranlib %s" out opts files out;;
ARCH=arm
MODEL=$(ANDROID_SUBARCH)
SYSTEM=$(ANDROID_ABI)
NATIVECC=$(BYTECC)
NATIVECCCOMPOPTS=-Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
NATIVECCPROFOPTS=-Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
NATIVECCLINKOPTS=
NATIVECCRPATH=-Wl,-rpath,
NATIVECCLIBS= -lm  -ldl
#ASM=%{lib}%/android-ndk/toolchains/ANDROID_TOOLCHAIN/prebuilt/%{os}%-x86/bin/arm-oe-linux-gnueabi-ar
ASM=$(OECORE_NATIVE_SYSROOT)/usr/bin/arm-oe-linux-gnueabi/arm-oe-linux-gnueabi-as
ASPP=$(BYTECC) -c
ASPPPROFFLAGS=-DPROFILING
PROFILING=prof
DYNLINKOPTS= -ldl
OTHERLIBRARIES=unix str num dynlink bigarray systhreads
DEBUGGER=ocamldebugger
CC_PROFILE=-pg
SYSTHREAD_SUPPORT=true
#PARTIALLD=%{lib}%/android-ndk/toolchains/ANDROID_TOOLCHAIN/prebuilt/%{os}%-x86/bin/arm-linux-androideabi-ld -r
PARTIALLD=$(OECORE_NATIVE_SYSROOT)/usr/bin/arm-oe-linux-gnueabi/arm-oe-linux-gnueabi-ld -r
PACKLD=$(PARTIALLD) $(NATIVECCLINKOPTS) -o
DLLCCCOMPOPTS=
IFLEXDIR=
O=o
A=a
SO=so
EXT_OBJ=.o
EXT_ASM=.s
EXT_LIB=.a
EXT_DLL=.so
EXTRALIBS=
CCOMPTYPE=cc
TOOLCHAIN=cc
NATDYNLINK=false
CMXS=cmxa
MKEXE=$(BYTECC)
MKEXEDEBUGFLAG=-g
MKDLL=$(BYTECC) -shared
MKMAINDLL=$(BYTECC) -shared
RUNTIMED=noruntimed
ASM_CFI_SUPPORTED=false
#TARGET=arm-linux-androideabi
TARGET=arm-oe-linux-gnueabi
WITH_FRAME_POINTERS=false

