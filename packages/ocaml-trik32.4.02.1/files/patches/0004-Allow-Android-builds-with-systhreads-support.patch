From 0be5ac86f80f3c70cda83c0480afdf26e6678026 Mon Sep 17 00:00:00 2001
From: Peter Zotov <whitequark@whitequark.org>
Date: Wed, 22 Oct 2014 23:16:25 +0400
Subject: [PATCH] Allow Android builds with systhreads support.

---
 otherlibs/systhreads/st_posix.h | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/otherlibs/systhreads/st_posix.h b/otherlibs/systhreads/st_posix.h
index e0bc65e..1d87a22 100644
--- a/otherlibs/systhreads/st_posix.h
+++ b/otherlibs/systhreads/st_posix.h
@@ -80,7 +80,12 @@ static void st_thread_exit(void)
 
 static void st_thread_kill(st_thread_id thr)
 {
+#if !defined(__ANDROID__)
+  /* pthread_cancel is unsafe, as it does not allow the thread an opportunity
+     to free shared resources such as mutexes. Thus, it is not implemented
+     in Android's libc. */
   pthread_cancel(thr);
+#endif
 }
 
 /* Scheduling hints */
@@ -322,8 +327,10 @@ static void * caml_thread_tick(void * arg)
   /* Block all signals so that we don't try to execute an OCaml signal handler*/
   sigfillset(&mask);
   pthread_sigmask(SIG_BLOCK, &mask, NULL);
+#if !defined(__ANDROID__)
   /* Allow async cancellation */
   pthread_setcanceltype(PTHREAD_CANCEL_ASYNCHRONOUS, NULL);
+#endif
   while(1) {
     /* select() seems to be the most efficient way to suspend the
        thread for sub-second intervals */
@@ -340,6 +347,15 @@ static void * caml_thread_tick(void * arg)
 
 /* "At fork" processing */
 
+#if defined(__ANDROID__)
+/* Android's libc does not include declaration of pthread_atfork;
+   however, it implements it since API level 10 (Gingerbread).
+   The reason for the omission is that Android (GUI) applications
+   are not supposed to fork at all, however this workaround is still
+   included in case OCaml is used for an Android CLI utility. */
+int pthread_atfork(void (*prepare)(void), void (*parent)(void), void (*child)(void));
+#endif
+
 static int st_atfork(void (*fn)(void))
 {
   return pthread_atfork(NULL, NULL, fn);
-- 
2.1.1

